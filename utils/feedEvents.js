// Sorted lexicographically. First by group name. Then by event name.
const events = new Map();
events.set('federationBidPlaced', 'Federation.BidPlaced');
events.set('federationVoteCast', 'Federation.VoteCast');
events.set('newProposalPoll', 'Nerman.NewProposalPoll');
events.set('threadFeedbackSent', 'Nerman.ThreadFeedbackSent');
events.set('threadStatusChange', 'Nerman.ThreadStatusChange');
events.set('threadVote', 'Nerman.ThreadVote');
events.set('auctionBid', 'NounsDAO.AuctionBid');
events.set('auctionCreated', 'NounsDAO.AuctionCreated');
events.set('auctionEnd', 'NounsDAO.AuctionEnd');
events.set('delegateChanged', 'NounsDAO.DelegateChanged');
events.set('delegateChangedNoZero', 'NounsDAO.DelegateChangedNoZero');
events.set('nounCreated', 'NounsDAO.NounCreated');
events.set('propCreated', 'NounsDAO.PropCreated');
events.set('propStatusChange', 'NounsDAO.PropStatusChange');
events.set('propVoteCast', 'NounsDAO.PropVoteCastNoZero');
events.set('propVoteCastOnlyZero', 'NounsDAO.PropVoteCastOnlyZero');
events.set('transferNoun', 'NounsDAO.TransferNoun');
events.set('candidateFeedbackSent', 'NounsDAOCandidates.CandidateFeedbackSent');
events.set('feedbackSent', 'NounsDAOCandidates.FeedbackSent');
events.set('proposalCandidateCanceled', 'NounsDAOCandidates.ProposalCandidateCanceled');
events.set('proposalCandidateCreated', 'NounsDAOCandidates.ProposalCandidateCreated');
events.set('proposalCandidateUpdated', 'NounsDAOCandidates.ProposalCandidateUpdated');
events.set('signatureAdded', 'NounsDAOCandidates.SignatureAdded');
events.set('EscrowedToFork', 'NounsDAOFork.EscrowedToFork');
events.set('newPost', 'NounsNymz.NewPost');
module.exports = events;
